# Simple workflow for deploying static content to GitHub Pages
name: Publish Docs

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
    tags: [ "*" ]
    # Settings -> Environments
    # Selet github-pages
    # add rule for tags v1.*

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the
# run in-progress and latest queued.  However, do NOT cancel in-progress
# runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      do_deploy: ${{ steps.check.outputs.do_deploy }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        # Make sure we have tag information for git describe
        fetch-depth: 0
    - name: Additional deploy check...
      id: check
      run: |
        env | grep GITHUB
        set -x
        if [ x"$GITHUB_REF" = x"refs/heads/main" ] ; then
          echo "do_deploy=true" >> "$GITHUB_OUTPUT"
        elif [ x"$GITHUB_REF_TYPE = "tag" ] ; then
          TAG_COMMIT=$(git rev-parse $GITHUB_REF)
          MAIN_COMMIT=$(git rev-parse origin/main)
          :
          echo "Tag commit: $TAG_COMMIT"
          echo "Main commit: $MAIN_COMMIT"
          :
          if [ "$TAG_COMMIT" = "$MAIN_COMMIT" ]; then
            echo "do_deploy=true" >> "$GITHUB_OUTPUT"
          else
            echo "do_deploy=false" >> "$GITHUB_OUTPUT"
          fi
        else
          echo "do_deploy=false" >> "$GITHUB_OUTPUT"
        fi
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"
        cache: pip
    - name: Install sphinx dependencies
      run: pip install -r docs/requirements.txt
    - name: Generate sphinx documentation
      run: make -C docs html

    - name: Setup Pages
      uses: actions/configure-pages@v5
    - name: Upload artifart
      uses: actions/upload-pages-artifact@v3
      with:
        path: docs/_build/html

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: needs.build.outputs.do_deploy == 'true'
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4


